{"version":3,"file":"static/js/942.e95017f0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/movies-details-page.module.css?e01d","components/pages/MovieDetailsPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"movies-details-page_movieDetailsContainer__vUSu3\",\"movieDetailsImage\":\"movies-details-page_movieDetailsImage__J5mfM\",\"image\":\"movies-details-page_image__NESl5\",\"movieDetailsDescription\":\"movies-details-page_movieDetailsDescription__P4C6M\",\"movieDetailsTitle\":\"movies-details-page_movieDetailsTitle__-AbvX\",\"movieDetailsSubTitle\":\"movies-details-page_movieDetailsSubTitle__GyuCH\",\"goBack\":\"movies-details-page_goBack__rz24O\",\"movieDetailsInfo\":\"movies-details-page_movieDetailsInfo__+bEFP\",\"movieDetailsSubInfo\":\"movies-details-page_movieDetailsSubInfo__DzoJs\",\"movieDetailsTextInfo\":\"movies-details-page_movieDetailsTextInfo__A+mIq\",\"a\":\"movies-details-page_a__1sXR9\",\"link\":\"movies-details-page_link__kUMOJ\"};","import { useState, useEffect } from 'react';\r\nimport {\r\n  useParams,\r\n  useNavigate,\r\n  useLocation,\r\n  Link,\r\n  Outlet,\r\n} from 'react-router-dom';\r\n\r\nimport { fetchFilmToId } from 'shared/services/movies-api';\r\n\r\nimport Loader from 'shared/Loader';\r\n\r\nimport styles from './movies-details-page.module.css';\r\n\r\nconst MoviesDetailsPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { movieId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const from = location.state?.from || '/';\r\n\r\n  const goBack = () => navigate(from);\r\n\r\n  useEffect(() => {\r\n    const getTrandingMovie = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const { data } = await fetchFilmToId(movieId);\r\n        setMovies(data);\r\n      } catch (error) {\r\n        setError(error.massage);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getTrandingMovie(movieId);\r\n  }, [movieId]);\r\n\r\n  const { title, poster_path, overview, genres, vote_average } =\r\n    movies;\r\n\r\n  const genresList = genres?.map(genre => genre.name).join(', ');\r\n\r\n  const userScore = () => {\r\n    const scorePecentage = () => {\r\n      return Math.round(vote_average * 10);\r\n    };\r\n    const userScorePecentage = scorePecentage();\r\n\r\n    return (\r\n      <p className={styles.MovieDetailsUserScore}>\r\n        User score:&ensp;\r\n        {userScorePecentage}% \r\n      </p>\r\n    );\r\n  };\r\n\r\n  const Score = userScore();\r\n\r\n  return (\r\n    <>\r\n      <button className={styles.goBack} onClick={goBack}>\r\n        Go back\r\n      </button>\r\n      {loading && <Loader />}\r\n      {error && <p>{error.massage}</p>}\r\n      <div className={styles.movieDetailsContainer}>\r\n        <div className={styles.movieDetailsImage}>\r\n          <img className={styles.image}\r\n            src={\r\n              poster_path === undefined\r\n                ? `poster not found`\r\n                : `https://image.tmdb.org/t/p/w500${poster_path}`\r\n            }\r\n            alt=\"\"\r\n          ></img>\r\n        </div>\r\n        <div className={styles.movieDetailsDescription}>\r\n          <h2 className={styles.movieDetailsTitle}>{title}</h2>\r\n          {vote_average > 0 && Score}\r\n          <p className={styles.movieDetailsSubTitle}>Brief description</p>\r\n          <p>{overview !== '' ? overview : 'No brief description'}</p>\r\n          <p className={styles.movieDetailsSubTitle}>Genres</p>\r\n          <p>{genresList !== '' ? genresList : 'Genres not found'}</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.movieDetailsInfo}>\r\n        <p className={styles.movieDetailsSubInfo}>Additional information:</p>\r\n        <div className={styles.movieDetailsTextInfo}>\r\n          <Link className={styles.link} state={{ from }} to={`cast`}>\r\n            Cast\r\n          </Link>\r\n          <Link className={styles.link} state={{ from }} to={`reviews`}>\r\n            Reviews\r\n          </Link>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesDetailsPage;","import axios from 'axios';\r\n\r\nconst API_KEY = 'e2aa7af502a0fd1251b07c4094c5d319';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\r\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\r\nconst ID_URL = `${BASE_URL}/movie/`;\r\n\r\nexport const fetchTrendingFilms = async (page = 1) => {\r\n  return await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=${page}`);\r\n};\r\n\r\nexport const fetchSearchFilms = async (searchQuery, page = 1) => {\r\n  return await axios.get(\r\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`\r\n  );\r\n};\r\n\r\nexport const fetchFilmToId = async id => {\r\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchCastFilmToId = async id => {\r\n  return await axios.get(`${ID_URL}${id}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchReviewsFilmToId = async id => {\r\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\r\n};\r\n"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","getTrandingMovie","fetchFilmToId","data","massage","title","poster_path","overview","genres","vote_average","genresList","map","genre","name","join","Score","userScorePecentage","Math","round","className","styles","userScore","onClick","Loader","src","undefined","alt","to","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","axios","fetchSearchFilms","searchQuery","id","fetchCastFilmToId","fetchReviewsFilmToId"],"sourceRoot":""}