{"version":3,"file":"static/js/7.006ce3a0.chunk.js","mappings":"oQACA,EAA+B,mCAA/B,EAAgF,kCAAhF,EAAgI,kCAAhI,EAAkN,wC,SCuDlN,EA/CoB,WAClB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6FACtBN,GAAW,GADW,mBAGGO,EAAAA,EAAAA,IAAqBJ,GAHxB,gBAGZK,EAHY,EAGZA,KACRV,EAAWU,EAAKC,SAJI,gDAMpBP,EAAS,KAAMQ,SANK,yBAQpBV,GAAW,GARS,4EAAH,qDAWrBM,EAAgBH,EACjB,GAAE,CAACA,IAEJ,IAAMQ,EAAiB,OAAGd,QAAH,IAAGA,OAAH,EAAGA,EAASe,KACjC,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACtB,OACE,eAAaC,UAAWC,EAAxB,UACE,4BACE,gBAAID,UAAWC,EAAf,qBAAkDJ,MAElD,uBAAIC,KACJ,wCAAgBC,SALXH,EASZ,IAGH,OACE,4BACE,eAAII,UAAWC,EAAf,qBACCnB,IAAW,SAACoB,EAAA,EAAD,IACXlB,IAAS,uBAAIA,EAAMS,WACpB,eAAIO,UAAWC,EAAf,SAAoCP,MAGzC,C,kMCpDKS,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAM,UAAMH,EAAN,WAECI,EAAkB,mCAAG,uGAAOC,EAAP,+BAAc,EAAd,SACnBC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAkCF,EAAlC,iBAAkDM,IAD/B,mFAAH,qDAIlBE,EAAgB,mCAAG,WAAOC,GAAP,0FAAoBH,EAApB,+BAA2B,EAA3B,SACjBC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,oBACcH,EADd,kBAC+BS,EAD/B,iBACmDH,IAFlC,mFAAH,sDAMhBI,EAAa,mCAAG,WAAMjB,GAAN,iFACdc,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBX,EAAtB,oBAAoCO,IADtB,mFAAH,sDAIbW,EAAiB,mCAAG,WAAMlB,GAAN,iFAClBc,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBX,EAAtB,4BAA4CO,IAD1B,mFAAH,sDAIjBb,EAAoB,mCAAG,WAAMM,GAAN,iFACrBc,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBX,EAAtB,4BAA4CO,IADvB,mFAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/reviews-page.module.css?0e98","components/pages/ReviewsPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsTitle\":\"reviews-page_reviewsTitle__ZgOOp\",\"reviewsList\":\"reviews-page_reviewsList__zc8Le\",\"reviewsItem\":\"reviews-page_reviewsItem__yzWNi\",\"p\":\"reviews-page_p__zXrBt\",\"reviewsAuthorName\":\"reviews-page_reviewsAuthorName__xpFmp\"};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { fetchReviewsFilmToId } from 'shared/services/movies-api';\r\n\r\nimport Loader from 'shared/Loader';\r\n\r\nimport styles from './reviews-page.module.css';\r\n\r\nconst ReviewsPage = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getReviewsMovie = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await fetchReviewsFilmToId(movieId);\r\n        setReviews(data.results);\r\n      } catch (error) {\r\n        setError(error.massage);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getReviewsMovie(movieId);\r\n  }, [movieId]);\r\n\r\n  const renderReviewsList = reviews?.map(\r\n    ({ id, author, content, created_at }) => {\r\n      return (\r\n        <li key={id} className={styles.reviewsItem}>\r\n          <div>\r\n            <h4 className={styles.reviewsAuthorName}>Author: {author}</h4>\r\n\r\n            <p>{content}</p>\r\n            <p>Created at: {created_at}</p>\r\n          </div>\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h3 className={styles.reviewsTitle}>Reviews</h3>\r\n      {loading && <Loader />}\r\n      {error && <p>{error.massage}</p>}\r\n      <ul className={styles.reviewsList}>{renderReviewsList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsPage;","import axios from 'axios';\r\n\r\nconst API_KEY = 'e2aa7af502a0fd1251b07c4094c5d319';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\r\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\r\nconst ID_URL = `${BASE_URL}/movie/`;\r\n\r\nexport const fetchTrendingFilms = async (page = 1) => {\r\n  return await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=${page}`);\r\n};\r\n\r\nexport const fetchSearchFilms = async (searchQuery, page = 1) => {\r\n  return await axios.get(\r\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`\r\n  );\r\n};\r\n\r\nexport const fetchFilmToId = async id => {\r\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchCastFilmToId = async id => {\r\n  return await axios.get(`${ID_URL}${id}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchReviewsFilmToId = async id => {\r\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\r\n};\r\n"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","getReviewsMovie","fetchReviewsFilmToId","data","results","massage","renderReviewsList","map","id","author","content","created_at","className","styles","Loader","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","axios","fetchSearchFilms","searchQuery","fetchFilmToId","fetchCastFilmToId"],"sourceRoot":""}