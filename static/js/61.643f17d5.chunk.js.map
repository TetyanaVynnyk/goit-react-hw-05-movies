{"version":3,"file":"static/js/61.643f17d5.chunk.js","mappings":"qQACA,EAA4B,6BAA5B,EAAoE,4BAApE,EAA2G,4BAA3G,EAAwJ,kCAAxJ,EAA0M,iCAA1M,EAA2P,iCAA3P,EAAiT,sC,SCkEjT,EA1DiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBN,GAAW,GADQ,mBAGMO,EAAAA,EAAAA,IAAkBJ,GAHxB,gBAGTK,EAHS,EAGTA,KACRV,EAAQU,EAAKX,MAJI,gDAMjBK,EAAS,KAAMO,SANE,yBAQjBT,GAAW,GARM,4EAAH,qDAWlBM,EAAaH,EACd,GAAE,CAACA,IAEJ,IAAMO,EAAc,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAMc,KAC3B,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3B,OACE,gBAAkBC,UAAWC,EAA7B,WACE,0BACE,gBACEC,IACmB,OAAjBH,EACI,oBADJ,yCAEsCA,GAExCI,IAAI,GACJH,UAAWC,OAGf,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAuCJ,KACvC,iBAAKG,UAAWC,EAAhB,wBACcH,UAfTF,EAoBZ,IAGH,OACE,4BACE,eAAII,UAAWC,EAAf,kBACClB,IAAW,SAACqB,EAAA,EAAD,IACXnB,IAAS,uBAAIA,EAAMQ,WACpB,eAAIO,UAAWC,EAAf,SAAiCP,MAGtC,C,kMC/DKW,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAM,UAAMH,EAAN,WAECI,EAAkB,mCAAG,uGAAOC,EAAP,+BAAc,EAAd,SACnBC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAkCF,EAAlC,iBAAkDM,IAD/B,mFAAH,qDAIlBE,EAAgB,mCAAG,WAAOC,GAAP,0FAAoBH,EAApB,+BAA2B,EAA3B,SACjBC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,oBACcH,EADd,kBAC+BS,EAD/B,iBACmDH,IAFlC,mFAAH,sDAMhBI,EAAa,mCAAG,WAAMC,GAAN,iFACdJ,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBO,EAAtB,oBAAoCX,IADtB,mFAAH,sDAIbd,EAAiB,mCAAG,WAAMyB,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBO,EAAtB,4BAA4CX,IAD1B,mFAAH,sDAIjBY,EAAoB,mCAAG,WAAMD,GAAN,iFACrBJ,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBO,EAAtB,4BAA4CX,IADvB,mFAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/cast-page.module.css?4006","components/pages/CastPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castTitle\":\"cast-page_castTitle__MQhPf\",\"castList\":\"cast-page_castList__iI8V-\",\"castItem\":\"cast-page_castItem__Mqdac\",\"castActorImage\":\"cast-page_castActorImage__bK2N3\",\"castActorInfo\":\"cast-page_castActorInfo__rhbdc\",\"castActorName\":\"cast-page_castActorName__juieH\",\"castActorCharacter\":\"cast-page_castActorCharacter__SXbfv\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCastFilmToId } from 'shared/services/movies-api';\n\nimport Loader from 'shared/Loader';\n\nimport styles from './cast-page.module.css';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCastMovie = async () => {\n      setLoading(true);\n      try {\n        const { data } = await fetchCastFilmToId(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCastMovie(movieId);\n  }, [movieId]);\n\n  const renderCastList = cast?.map(\n    ({ cast_id, name, character, profile_path }) => {\n      return (\n        <li key={cast_id} className={styles.castItem}>\n          <div>\n            <img\n              src={\n                profile_path === null\n                  ? 'Profile not found'\n                  : `https://image.tmdb.org/t/p/w500${profile_path}`\n              }\n              alt=\"\"\n              className={styles.castActorImage}\n            />\n          </div>\n          <div className={styles.castActorInfo}>\n            <div className={styles.castActorName}>{name}</div>\n            <div className={styles.castActorCharacter}>\n              Character: {character}\n            </div>\n          </div>\n        </li>\n      );\n    }\n  );\n\n  return (\n    <div>\n      <h3 className={styles.castTitle}>Cast</h3>\n      {loading && <Loader />}\n      {error && <p>{error.massage}</p>}\n      <ul className={styles.castList}>{renderCastList}</ul>\n    </div>\n  );\n};\n\nexport default CastPage;","import axios from 'axios';\n\nconst API_KEY = 'e2aa7af502a0fd1251b07c4094c5d319';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\nexport const fetchTrendingFilms = async (page = 1) => {\n  return await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=${page}`);\n};\n\nexport const fetchSearchFilms = async (searchQuery, page = 1) => {\n  return await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`\n  );\n};\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchCastFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviewsFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","getCastMovie","fetchCastFilmToId","data","massage","renderCastList","map","cast_id","name","character","profile_path","className","styles","src","alt","Loader","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","axios","fetchSearchFilms","searchQuery","fetchFilmToId","id","fetchReviewsFilmToId"],"sourceRoot":""}