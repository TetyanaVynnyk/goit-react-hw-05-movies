{"version":3,"file":"static/js/177.7df50e07.chunk.js","mappings":"kLAMMA,EAAa,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACzB,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMR,GAAYS,GAAE,kBAAaL,GAAhD,SACGC,GAASC,KAFLF,EADgB,IAQ3B,OACE,4BACE,wBAAKF,IACJJ,IAAW,SAAC,IAAD,IACXC,IAAS,qCAGf,EAED,MAEAH,EAAWc,aAAe,CACxBb,MAAO,G,qJC5BT,GAAiB,E,SCwCjB,EAhCiB,WACf,OAA0Bc,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOb,EAAP,KAAgBe,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOZ,EAAP,KAAce,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,sGAErBH,GAAW,GAFU,UAGEI,EAAAA,EAAAA,MAHF,gBAGbC,EAHa,EAGbA,KACRN,EAASM,EAAKC,SAJO,gDAMrBL,EAAS,KAAMM,SANM,yBAQrBP,GAAW,GARU,4EAAH,qDAWtBG,GACD,GAAE,KAGD,4BACE,eAAIK,UAAWC,EAAAA,MAAf,4BACCxB,IAAW,SAACyB,EAAA,EAAD,IACXxB,IAAS,uBAAIA,EAAMqB,UACnBvB,EAAM2B,OAAS,IACd,SAAC5B,EAAA,EAAD,CAAYC,MAAOA,MAI1B,C,kMCrCK4B,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAM,UAAMH,EAAN,WAECT,EAAkB,mCAAG,uGAAOa,EAAP,+BAAc,EAAd,SACnBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAkCF,EAAlC,iBAAkDK,IAD/B,mFAAH,qDAIlBE,EAAgB,mCAAG,WAAOC,GAAP,0FAAoBH,EAApB,+BAA2B,EAA3B,SACjBC,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACcH,EADd,kBAC+BQ,EAD/B,iBACmDH,IAFlC,mFAAH,sDAMhBI,EAAa,mCAAG,WAAM9B,GAAN,iFACd2B,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAsBzB,EAAtB,oBAAoCqB,IADtB,mFAAH,sDAIbU,EAAiB,mCAAG,WAAM/B,GAAN,iFAClB2B,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAsBzB,EAAtB,4BAA4CqB,IAD1B,mFAAH,sDAIjBW,EAAoB,mCAAG,WAAMhC,GAAN,iFACrB2B,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAsBzB,EAAtB,4BAA4CqB,IADvB,mFAAH,qD","sources":["components/modules/MoviesList/MoviesList.jsx","components/pages/homepage.module.css","components/pages/Homepage.jsx","shared/services/movies-api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport Loader from 'shared/Loader';\n\nconst MoviesList = ({ items, loading, error }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title, name }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title || name}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div>\n      <ul>{elements}</ul>\n      {loading && <Loader />}\n      {error && <p>...Opps</p>}\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.defaultPorps = {\n  items: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\n\nimport { fetchTrendingFilms } from 'shared/services/movies-api';\n\nimport MoviesList from 'components/modules/MoviesList/MoviesList';\nimport Loader from '../../shared/Loader';\n\nimport styles from './homepage.module.css';\n\nconst Homepage = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getTrandingMovie = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetchTrendingFilms();\n        setItems(data.results);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrandingMovie();\n  }, []);\n\n  return (\n    <div>\n      <h2 className={styles.title}>Trending films</h2>\n      {loading && <Loader />}\n      {error && <p>{error.massage}</p>}\n      {items.length > 0 && (\n        <MoviesList items={items}/>\n      )}\n    </div>\n  );\n};\n\nexport default Homepage;","import axios from 'axios';\n\nconst API_KEY = 'e2aa7af502a0fd1251b07c4094c5d319';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\nexport const fetchTrendingFilms = async (page = 1) => {\n  return await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=${page}`);\n};\n\nexport const fetchSearchFilms = async (searchQuery, page = 1) => {\n  return await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`\n  );\n};\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchCastFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviewsFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["MoviesList","items","loading","error","location","useLocation","elements","map","id","title","name","state","from","to","defaultPorps","useState","setItems","setLoading","setError","useEffect","getTrandingMovie","fetchTrendingFilms","data","results","massage","className","styles","Loader","length","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","page","axios","fetchSearchFilms","searchQuery","fetchFilmToId","fetchCastFilmToId","fetchReviewsFilmToId"],"sourceRoot":""}