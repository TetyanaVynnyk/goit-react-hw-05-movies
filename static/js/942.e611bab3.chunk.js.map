{"version":3,"file":"static/js/942.e611bab3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/movies-details-page.module.css?e01d","components/pages/MovieDetailsPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetailsContainer\":\"movies-details-page_MovieDetailsContainer__JpIRn\",\"MovieDetailsImage\":\"movies-details-page_MovieDetailsImage__fQeGL\",\"image\":\"movies-details-page_image__ePfjF\",\"MovieDetailsDescription\":\"movies-details-page_MovieDetailsDescription__Zie1V\",\"MovieDetailsTitle\":\"movies-details-page_MovieDetailsTitle__PWTX3\",\"MovieDetailsSubTitle\":\"movies-details-page_MovieDetailsSubTitle__WSTQU\",\"goBack\":\"movies-details-page_goBack__aunC8\",\"MovieDetailsInfo\":\"movies-details-page_MovieDetailsInfo__Q8Xj4\",\"MovieDetailsSubInfo\":\"movies-details-page_MovieDetailsSubInfo__7FnTJ\",\"MovieDetailsTextInfo\":\"movies-details-page_MovieDetailsTextInfo__LjPBb\",\"a\":\"movies-details-page_a__BTbW3\",\"link\":\"movies-details-page_link__4Fb2N\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n  Outlet,\n} from 'react-router-dom';\n\nimport { fetchFilmToId } from 'shared/services/movies-api';\n\nimport Loader from 'shared/Loader';\n\nimport styles from './movies-details-page.module.css';\n\nconst MoviesDetailsPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const getTrandingMovie = async () => {\n      setLoading(true);\n\n      try {\n        const { data } = await fetchFilmToId(movieId);\n        setMovies(data);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrandingMovie(movieId);\n  }, [movieId]);\n\n  const { title, poster_path, overview, genres, vote_average } =\n    movies;\n\n  const genresList = genres?.map(genre => genre.name).join(', ');\n\n  const userScore = () => {\n    const scorePecentage = () => {\n      return Math.round(vote_average * 10);\n    };\n    const userScorePecentage = scorePecentage();\n\n    return (\n      <p className={styles.MovieDetailsUserScore}>\n        User score:&ensp;\n        {userScorePecentage}% \n      </p>\n    );\n  };\n\n  const Score = userScore();\n\n  return (\n    <>\n      <button className={styles.goBack} onClick={goBack}>\n        Go back\n      </button>\n      {loading && <Loader />}\n      {error && <p>{error.massage}</p>}\n      <div className={styles.MovieDetailsContainer}>\n        <div className={styles.MovieDetailsImage}>\n          <img className={styles.image}\n            src={\n              poster_path === undefined\n                ? `poster not found`\n                : `https://image.tmdb.org/t/p/w500${poster_path}`\n            }\n            alt=\"\"\n          ></img>\n        </div>\n        <div className={styles.MovieDetailsDescription}>\n          <h2 className={styles.MovieDetailsTitle}>{title}</h2>\n          {vote_average > 0 && Score}\n          <p className={styles.MovieDetailsSubTitle}>Brief description</p>\n          <p>{overview !== '' ? overview : 'No brief description'}</p>\n          <p className={styles.MovieDetailsSubTitle}>Genres</p>\n          <p>{genresList !== '' ? genresList : 'Genres not found'}</p>\n        </div>\n      </div>\n      <div className={styles.MovieDetailsInfo}>\n        <p className={styles.MovieDetailsSubInfo}>Additional information:</p>\n        <div className={styles.MovieDetailsTextInfo}>\n          <Link className={styles.link} state={{ from }} to={`cast`}>\n            Cast\n          </Link>\n          <Link className={styles.link} state={{ from }} to={`reviews`}>\n            Reviews\n          </Link>\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;","import axios from 'axios';\n\nconst API_KEY = 'e2aa7af502a0fd1251b07c4094c5d319';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\nexport const fetchTrendingFilms = async (page = 1) => {\n  return await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=${page}`);\n};\n\nexport const fetchSearchFilms = async (searchQuery, page = 1) => {\n  return await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`\n  );\n};\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchCastFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviewsFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","getTrandingMovie","fetchFilmToId","data","massage","title","poster_path","overview","genres","vote_average","genresList","map","genre","name","join","Score","userScorePecentage","Math","round","className","styles","userScore","onClick","Loader","src","undefined","alt","to","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","axios","fetchSearchFilms","searchQuery","id","fetchCastFilmToId","fetchReviewsFilmToId"],"sourceRoot":""}